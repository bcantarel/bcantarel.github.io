nmds <- nmds[nmds$group %in% keepsamps,]
pcoa <- merge(pcoa,sinfo,by='group')
nmds <- merge(nmds,sinfo,by='group')
ggplot(pcoa, aes(x=axis1, y=axis2,col=condition)) + geom_point()
head(pcoa)
sgroups <- read.table(file=paste(data.dir,'design.shiny.txt',sep='/'),header=TRUE)
dtab <- merge(sgroups,diversity,by='group',all.y=TRUE,all.x=FALSE)
sinfo <- sgroups[sgroups$group %in% keepsamps,]
pcoa <- pcoa[pcoa$group %in% keepsamps,]
nmds <- nmds[nmds$group %in% keepsampggplot(pcoa, aes(x=axis1, y=axis2,col=condition)) + geom_point()s,]
pcoa <- merge(pcoa,sinfo,by='group')
nmds <- merge(nmds,sinfo,by='group')
pcoa <- pcoa[pcoa$group %in% keepsamps,]
nmds <- nmds[nmds$group %in% keepsamps,]
pcoa <- merge(pcoa,sinfo,by='group')
nmds <- merge(nmds,sinfo,by='group')
ggplot(pcoa, aes(x=axis1, y=axis2,col=condition)) + geom_point()
colnames(pcoa)
sumgrp <- read.table(file=paste(data.dir,'microbiome.dgc.groups.summary',sep='/'),header=TRUE,sep='\t')
keepsamps <- sumgrp[sumgrp$nseqs >= var$minseq,]$group
nmds <- read.table(file=paste(data.dir,"microbiome.dgc.thetayc.0.03.lt.nmds.axes",sep='/'),header=TRUE)
pcoa <- read.table(file=paste(data.dir,"microbiome.dgc.thetayc.0.03.lt.pcoa.axes",sep='/'),header=TRUE)
diversity<-read.table(file=paste(data.dir,"microbiome.dgc.groups.summary",sep='/'),header=TRUE)
sgroups <- read.table(file=paste(data.dir,'design.shiny.txt',sep='/'),header=TRUE)
dtab <- merge(sgroups,diversity,by='group',all.y=TRUE,all.x=FALSE)
sinfo <- sgroups[sgroups$group %in% keepsamps,]
pcoa <- pcoa[pcoa$group %in% keepsamps,]
nmds <- nmds[nmds$group %in% keepsamps,]
pcoa <- merge(pcoa,sinfo,by='group')
nmds <- merge(nmds,sinfo,by='group')
ggplot(pcoa, aes(x=axis1, y=axis2,col=condition)) + geom_point()
ggplot(nmds, aes(x=axis1, y=axis2,col=condition)) + geom_point()
p <- ggplot(dtab, aes(condition, invsimpson)) + geom_boxplot()
p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- ggplot(dtab, aes(condition, npshannon)) + geom_boxplot()
p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
install.packages("lefse")
install.packages("lefse")
q()
library(shiny)
library(reshape2)
library(ggplot2)
library(DT)
library(RColorBrewer)
library("gridExtra")
library(reshape2)
library(dplyr)
data.dir <- '/Volumes/project/bioinformatics/Cantarel_lab/shared/hzaki/sugarS3'
sumgrp <- read.table(file=paste(data.dir,'sugarS3.groups.summary',sep='/'),header=TRUE,sep='\t')
keepsamps <- sumgrp[sumgrp$nseqs >= 5000,]$group
nmds <- read.table(file=paste(data.dir,"sugarS3.thetayc.0.03.lt.nmds.axes",sep='/'),header=TRUE)
pcoa <- read.table(file=paste(data.dir,"sugarS3.thetayc.0.03.lt.pcoa.axes",sep='/'),header=TRUE)
diversity<-read.table(file=paste(data.dir,"sugarS3.groups.summary",sep='/'),header=TRUE)
sgroups <- read.table(file=paste(data.dir,'design.shiny.txt',sep='/'),header=TRUE)
dtab <- merge(sgroups,diversity,by.x='SampleID',by.y='group',all.y=TRUE,all.x=FALSE)
sinfo <- sgroups[sgroups$SampleID %in% keepsamps,]
pcoa <- pcoa[pcoa$group %in% keepsamps,]
nmds <- nmds[nmds$group %in% keepsamps,]
pcoa <- merge(pcoa,sinfo,by.x='group',by.y='SampleID')
nmds <- merge(nmds,sinfo,by.x='group',by.y='SampleID')
p1 <- ggplot(pcoa, aes(x=axis1, y=axis2,col=SampleGroup)) + geom_point()
p2 <- ggplot(nmds, aes(x=axis1, y=axis2,col=SampleGroup)) + geom_point()
p3 <- ggplot(dtab, aes(SampleGroup, npshannon)) + geom_boxplot()  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p4 <- ggplot(dtab, aes(SampleGroup, invsimpson)) + geom_boxplot()  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(p1,p2,p3,p4,ncol = 2, nrow = 2)
pdf(file="sugarS3.samplecomparison.pdf",paper="USr")
grid.arrange(p1,p2,p3,p4,ncol = 2, nrow = 2)
dev.off()
rowMax <- function(x) apply(x,1,max)
study <- 'sugarS3'
taxsummary <- read.table(file=paste(data.dir,'sugarS3.tax.summary.txt',sep='/'),header=TRUE)
header <- names(taxsummary)
dds <- taxsummary[rowMax(taxsummary[c(6:length(header))]) > 10, ]
dds.header <- names(dds)
keepcols <- header[c(6:length(names(dds)))]
i <- 2
tlevel <- select(filter(dds,taxlevel == i),keepcols)
libSizes <- melt(colSums(tlevel))
colnames(libSizes) <- c('SampleCt')
tlevel$taxon <- as.character(filter(dds,taxlevel == i)$taxon)
temp <- melt(tlevel,id.vars='taxon')
temp2 <- unique(merge(libSizes,temp,by.y='variable',by.x='row.names'))
temp2$normct <- 1e-6+(temp2$value/temp2$SampleCt)
taxontbl <- merge(sgroups,temp2,by.x='SampleID',by.y='Row.names')
tbl <- unique(select(taxontbl,'SampleName','SampleGroup','taxon','normct'))
df2 <- dcast(tbl, SampleName ~ taxon,value.var='normct')
p <- ggplot(tbl, aes(x=taxon, y=log10(normct))) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p)
p2 <- ggplot(data=tbl, aes(x=SampleName, y=normct, fill=taxon)) +  geom_bar(stat="identity") + guides(guide = guide_legend(ncol = 2)) + theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 5)) + theme(legend.title = element_text(size=8),legend.text = element_text(size=8))
print(p2)
head(tbl)
p2 <- ggplot(data=tbl, aes(x=SampleName, y=normct, fill=taxon)) +  geom_bar(stat="identity")
print(p2)
p2 <- ggplot(data=tbl, aes(x=SampleName, y=normct, fill=taxon)) +  geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 5)) + theme(legend.title = element_text(size=8),legend.text = element_text(size=8))
print(p2)
for (i in 2:5) {
tlevel <- select(filter(dds,taxlevel == i),keepcols)
libSizes <- melt(colSums(tlevel))
colnames(libSizes) <- c('SampleCt')
tlevel$taxon <- as.character(filter(dds,taxlevel == i)$taxon)
temp <- melt(tlevel,id.vars='taxon')
temp2 <- unique(merge(libSizes,temp,by.y='variable',by.x='row.names'))
temp2$normct <- 1e-6+(temp2$value/temp2$SampleCt)
taxontbl <- merge(sgroups,temp2,by.x='SampleID',by.y='Row.names')
tbl <- unique(select(taxontbl,'SampleName','SampleGroup','taxon','normct'))
df2 <- dcast(tbl, SampleName ~ taxon,value.var='normct')
pdf(file=paste(study,".taxon_boxplot",i,'.pdf',sep=''),paper='USr')
p <- ggplot(tbl, aes(x=taxon, y=log10(normct))) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p)
dev.off()
pdf(file=paste(study,".taxon_barchart",i,'.pdf',sep=''),paper='USr')
p2 <- ggplot(data=tbl, aes(x=SampleName, y=normct, fill=taxon)) +  geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 5)) + theme(legend.title = element_text(size=8),legend.text = element_text(size=8))
print(p2)
dev.off()
}
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyr)
library(readxl)
library(readr)
setwd("~/courses/R_Courses")
excel_sheets('Death_rates_and_life_expectancy_at_birth.xlsx')
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
head(deathrates)
demographics <- read_csv('test_input/demographics.csv')
setwd("~/courses/R_Courses/DataCleaning")
excel_sheets('Death_rates_and_life_expectancy_at_birth.xlsx')
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
head(deathrates)
demographics <- read_csv('test_input/demographics.csv')
head(demographics)
head(demographics$RACE)
unique(demographics$RACE)
demographics <- read_csv('demographics.csv')
head(demographics)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
unique(demographics$GENDER)
stringr(demographics$GENDER,'M','Male')
stringr(demographics$GENDER,'F.','Female')
unique(demographics$GENDER)
library(readxl)
library(readr)
library(stringr)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
stringr(demographics$GENDER,'M','Male')
stringr(demographics$GENDER,'F.','Female')
unique(demographics$GENDER)
unique(demographics$GENDER)
string_replace(demographics$GENDER,'M','Male')
string_replace(demographics$GENDER,'F.','Female')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
str_replace(demographics$GENDER,'M','Male')
str_replace(demographics$GENDER,'F.','Female')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
str_replace(demographics$GENDER,'M','Male')
str_replace(demographics$GENDER,'F[E]*','Female')
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
str_replace(demographics$GENDER,'M','Male')
str_replace(demographics$GENDER,'F[E]','Female')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
str_replace(demographics$GENDER,'M','Male')
str_replace(demographics$GENDER,'F[E]','Female')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
str_replace(demographics$GENDER,'M','Male')
str_replace(demographics$GENDER,'F','Female')
str_replace(demographics$GENDER,'FE','Female')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
unique(demographics$GENDER)
str_replace(demographics$GENDER,'MALE','M')
str_replace(demographics$GENDER,'FEMALE','F')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
demographics$GENDER <- str_replace(demographics$GENDER,'FEMALE','F')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'FEMALE','F')
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'FEMALE','F')
demographics$GENDER <- str_replace(demographics$GENDER,'FE','F')
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'F.','F')
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
unique(demographics$GENDER)
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'F.+','F')
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
unique(demographics$GENDER)
unique(demographics$RACE
)
demographics
library(readxl)
library(readr)
library(stringr)
setwd("~/courses/R_Courses/DataCleaning")
demographics <- read_csv('demographics.csv')
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'F.+','F')
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
unique(demographics$GENDER)
excel_sheets('Death_rates_and_life_expectancy_at_birth.xlsx')
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
head(deathrates)
excel_sheets('Death_rates_and_life_expectancy_at_birth.xlsx')
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
head(deathrates)
library(ggplot2)
p <- ggplot(deathrates, aes(x=Race, y=AverageLifeExpectancy_Years)) + geom_boxplot()
print(p)
gridExtra
library(gridExtra)
p1 <- ggplot(deathrates, aes(x=Race, y=AverageLifeExpectancy_Years)) + geom_boxplot()
p2 <- ggplot(deathrates, aes(x=Sex, y=AverageLifeExpectancy_Years)) + geom_boxplot()
grid.arrange(p1,p2,nrow=1)
p1 <- ggplot(deathrates, aes(x=Race, y=AverageLifeExpectancy_Years,color=Race)) + geom_boxplot()
p2 <- ggplot(deathrates, aes(x=Sex, y=AverageLifeExpectancy_Years,color=Sex)) + geom_boxplot()
grid.arrange(p1,p2,nrow=1)
t1 < drop_na(deathrates,AverageLifeExpectancy_Years)
t1 <- drop_na(deathrates,AverageLifeExpectancy_Years)
library(tidyr)
t1 <- drop_na(deathrates,AverageLifeExpectancy_Years)
nrow(deathrates)
t1 <- drop_na(deathrates,AverageLifeExpectancy_Years)
nrow(t1)
head(demographics)
head(deathrates)
spread(deathrates, Race, AverageLifeExpectancy_Years)
excel_sheets('Death_rates_and_life_expectancy_at_birth.xlsx')
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
spread(deathrates, Race, AverageLifeExpectancy_Years)
deathrates$Race <- str_replace(demographics$Race,'All Races','All')
dr1 <- spread(deathrates, Race, AverageLifeExpectancy_Years)
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
head(deathrates)
deathrates$Race <- str_replace(deathrates$Race,'All Races','All')
dr1 <- spread(deathrates, Race, AverageLifeExpectancy_Years)
head(dr1)
gather(dr1, `All`, `Black`, `White`, key = "Race", value = "AvgLifeExpectancy")
library(readxl)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(stringr)
setwd("~/courses/R_Courses/DataCleaning")
library(readxl)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(stringr)
setwd("~/courses/R_Courses/DataCleaning")
library(readxl)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(stringr)
setwd("~/courses/R_Courses/DataCleaning")
excel_sheets('Death_rates_and_life_expectancy_at_birth.xlsx')
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
nrow(deathrates)
t1 <- drop_na(deathrates,AverageLifeExpectancy_Years)
nrow(t1)
p1 <- ggplot(deathrates, aes(x=Race, y=AverageLifeExpectancy_Years,color=Race)) + geom_boxplot()
p2 <- ggplot(deathrates, aes(x=Sex, y=AverageLifeExpectancy_Years,color=Sex)) + geom_boxplot()
grid.arrange(p1,p2,nrow=1)
demographics <- read_csv('demographics.csv')
t2 <- replace_na(deathrates,list(AverageLifeExpectancy_Years = 68))
head(deathrates)
head(t2)
t3 <- replace_na(deathrates,AverageLifeExpectancy_Years)
t3 <- replace_na(deathrates,AverageLifeExpectancyYears)
t3 <- fill_na(deathrates,AverageLifeExpectancy_Years)
t3 <- fill(deathrates,AverageLifeExpectancy_Years)
head(deathrates)
head(t2)
t3 <- fill(deathrates,AverageLifeExpectancy_Years)
head(deathrates)
head(t3)
AverageLifeExpectancy_Years
AverageLifeExpectancy_Years
length(is_na(deathrates))
nrow(drop_na(deathrates))
nrow(drop_na(t3))
t3 <- fill(deathrates,AverageLifeExpectancy_Years)
nrow(drop_na(deathrates))
nrow(drop_na(t3))
t3 <- fill(deathrates,AverageLifeExpectancy_Years)
nrow(drop_na(deathrates))
nrow(drop_na(t3))
head(t3)
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'F.+','F')
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
unique(demographics$GENDER)
deathrates$Race <- str_replace(deathrates$Race,'All Races','All')
dr1 <- spread(deathrates, Race, AverageLifeExpectancy_Years)
dr2 <- gather(dr1, `All`, `Black`, `White`, key = "Race", value = "AvgLifeExpectancy")
head(dr1)
head(dr2)
tbl <- read.csv(file='heightweight.csv')
head(tbl)
head(mutate(tbl,weightKg=weightLb/2.2))
library(readxl)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(stringr)
library(dplyr)
setwd("~/courses/R_Courses/DataCleaning")
head(mutate(tbl,weightKg=weightLb/2.2))
summarize(tbl,mean.height=mean(heightIn))
summarize(group_by(tbl,sex),mean.height=mean(heightIn))
summarize(group_by(tbl,sex),mean.height=mean(heightIn),mean.weight=mean(weightLb))
head(separate(demographics, BIRTH_DATE, into = c("BirthDayOfMonth", "BirthMonth","BirthYear")))
head(join(demographics,RACE,ETHNICITY,col="Population",sep=' '))
head(unite(demographics,RACE,ETHNICITY,col="Population",sep=' '))
head(t1)
unique(t1$Year)
unique(t1$Sex)
t3 <- complete(t1,Year=1900:2014,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'))
head(t1)
head(dealthrates)
head(deathrates)
head(deathrates[is.na(deathrates)])
head(deathrates[is.na(deathrates)],)
head(deathrates[is.na(deathrates),])
head(deathrates[is.na(deathrates$AverageLifeExpectancy_Years),])
t3 <- complete(t1,Year=1900:2015,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'))
deathrates[is.na(deathrates$AverageLifeExpectancy_Years),])
deathrates[is.na(deathrates$AverageLifeExpectancy_Years),]
t1[is.na(t1$AverageLifeExpectancy_Years),]
t4 <- complete(t1,Year=1900:2015,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'),fill=list(AverageLifeExpectancy_Years=68))
t4
t4 <- complete(t1,Year=1900:2015,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'),fill=list(AverageLifeExpectancy_Years=68))
t4
t4[t4$Year>2014,]
deathrates[is.na(deathrates$AverageLifeExpectancy_Years),]
t1[is.na(t1$AverageLifeExpectancy_Years),]
t3 <- complete(t1,Year=1900:2015,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'))
t1[is.na(t1$AverageLifeExpectancy_Years),]
t3[is.na(t3$AverageLifeExpectancy_Years),]
t4 <- complete(t1,Year=1900:2015,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'),fill=list(AverageLifeExpectancy_Years=68))
t4[t4$Year>2014,]
expand(year = full_seq(2015:2019, 1), 1:4)
expand(year = full_seq(2015:2019, 1), c(1:4))
df <- tibble(
year   = c(2010, 2010, 2010, 2010, 2012, 2012, 2012),
qtr    = c(   1,    2,    3,    4,    1,    2,    3),
return = rnorm(7)
)
df %>% eexpand(year = full_seq(2010:2012, 1), qtr)
df <- tibble(
year   = c(2010, 2010, 2010, 2010, 2012, 2012, 2012),
qtr    = c(   1,    2,    3,    4,    1,    2,    3),
return = rnorm(7)
)
df %>% expand(year = full_seq(2010:2012, 1), qtr)
dm1 <- separate(demographics, BIRTH_DATE, into = c("BirthDayOfMonth", "BirthMonth","BirthYear"))
head(dm1)
dm2 <- unite(demographics,RACE,ETHNICITY,col="Population",sep=' ')
head(dm2)
dm2$PAT_ID
length(dm2$PAT_ID)
rnorm(20,mean=30,sd=5)
bmi <- cbind(BMI=rnorm(20,mean=30,sd=5),PAT_ID=dm2$PAT_ID)
head(bmi)
bmi <- bind_rows(BMI=rnorm(20,mean=30,sd=5),PAT_ID=dm2$PAT_ID)
bmi <- rnorm(20,mean=30,sd=5)
pat_id <- dm2$PAT_ID
bind_rows(pat_id,bmi)
pat_id
bmi
length(bmi)
length(pat_id)
bind_cols(pat_id,bmi)
bind_cols(as.data.frame(pat_id),as.data.frame(bmi)
)
bmi <- rnorm(20,mean=30,sd=5)
pat_id <- dm2$PAT_ID
pat.bmi <- bind_cols(as.data.frame(pat_id),as.data.frame(bmi))
head(pat.bmi)
pat.bmi <- bind_cols(as.data.frame(pat_id),as.data.frame(bmi))
merge(dm2,pat.bmi,by.x='PAT_ID',by.y='pat_id')
dm3 <- merge(dm2,pat.bmi,by.x='PAT_ID',by.y='pat_id')
ggplot(dm3,aes(x=GENDER, y=bmi,color=GENDER)) + geom_boxplot()
dm3 <- merge(dm2,pat.bmi,by.x='PAT_ID',by.y='pat_id')
head(dm3)
ggplot(dm3,aes(x=GENDER, y=bmi,color=GENDER)) + geom_boxplot()
library(forcats)
parse_factor(dm3,bm)
parse_factor(dm3,GENDER)
genotype <- c(rep("WT",5),rep("KO",5))
genotype <- factor(genotype,levels=c("WT","KO"))
summary(genotype)
genotype <- c(rep("WT",5),rep("KO",5))
genotype <- factor(genotype,levels=c("WT","KO"))
genotype
summary(genotype)
y <- matrix(1:20, nrow=5,ncol=4,byrow = FALSE)
y
y <- matrix(1:20, nrow=5,ncol=4,byrow = TRUE)
y
t(y) #transpose
rowSums(y)
colMeans(y)
d <- c(1,2,3,4)
e <- c("red", "white", "red", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
x <- data.frame(d,e,f)
names(x) <- c("ID","Color","Passed")
x
a <- c(1:5)
y <- matrix(1:20, nrow=5,ncol=4,byrow = TRUE)
w <- list(name="Fred", mynumbers=a, mymatrix=y, age=5.3)
a <- c(1:5)
y <- matrix(1:20, nrow=5,ncol=4,byrow = TRUE)
w <- list(name="Fred", mynumbers=a, mymatrix=y, age=5.3)
w
excel_sheets('Death_rates_and_life_expectancy_at_birth.xlsx')
deathrates <- read_excel('Death_rates_and_life_expectancy_at_birth.xlsx',sheet = 'NCHS_-_Death_rates_and_life_exp')
demographics <- read_csv('demographics.csv')
p1 <- ggplot(deathrates, aes(x=Race, y=AverageLifeExpectancy_Years,color=Race)) + geom_boxplot()
p2 <- ggplot(deathrates, aes(x=Sex, y=AverageLifeExpectancy_Years,color=Sex)) + geom_boxplot()
grid.arrange(p1,p2,nrow=1)
nrow(deathrates)
t1 <- drop_na(deathrates,AverageLifeExpectancy_Years)
nrow(t1)
t2 <- replace_na(deathrates,list(AverageLifeExpectancy_Years = 68))
head(deathrates)
head(t2)
t3 <- fill(deathrates,AverageLifeExpectancy_Years)
nrow(drop_na(deathrates))
nrow(drop_na(t3))
head(t3)
unique(demographics$GENDER)
demographics$GENDER <- str_replace(demographics$GENDER,'F.+','F')
demographics$GENDER <- str_replace(demographics$GENDER,'MALE','M')
unique(demographics$GENDER)
deathrates$Race <- str_replace(deathrates$Race,'All Races','All')
dr1 <- spread(deathrates, Race, AverageLifeExpectancy_Years)
dr2 <- gather(dr1, `All`, `Black`, `White`, key = "Race", value = "AvgLifeExpectancy")
head(dr1)
head(dr2)
dm1 <- separate(demographics, BIRTH_DATE, into = c("BirthDayOfMonth", "BirthMonth","BirthYear"))
head(dm1)
dm2 <- unite(demographics,RACE,ETHNICITY,col="Population",sep=' ')
head(dm2)
deathrates[is.na(deathrates$AverageLifeExpectancy_Years),]
t1[is.na(t1$AverageLifeExpectancy_Years),]
t3 <- complete(t1,Year=1900:2015,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'))
t1[is.na(t1$AverageLifeExpectancy_Years),]
t3[is.na(t3$AverageLifeExpectancy_Years),]
t4 <- complete(t1,Year=1900:2015,Race=c('All','Black','White'),Sex=c('Both Sexes','Male','Female'),fill=list(AverageLifeExpectancy_Years=68))
t4[t4$Year>2014,]
df <- tibble(
year   = c(2010, 2010, 2010, 2010, 2012, 2012, 2012),
qtr    = c(   1,    2,    3,    4,    1,    2,    3),
return = rnorm(7)
)
df %>% expand(year = full_seq(2010:2012, 1), qtr)
bmi <- rnorm(20,mean=30,sd=5)
pat_id <- dm2$PAT_ID
pat.bmi <- bind_cols(as.data.frame(pat_id),as.data.frame(bmi))
head(pat.bmi)
dm3 <- merge(dm2,pat.bmi,by.x='PAT_ID',by.y='pat_id')
head(dm3)
ggplot(dm3,aes(x=GENDER, y=bmi,color=GENDER)) + geom_boxplot()
tbl <- read.csv(file='heightweight.csv')
head(tbl)
head(mutate(tbl,weightKg=weightLb/2.2))
summarize(tbl,mean.height=mean(heightIn))
summarize(tbl,mean.height=mean(heightIn))
summarize(group_by(tbl,sex),mean.height=mean(heightIn))
summarize(group_by(tbl,sex),mean.height=mean(heightIn),mean.weight=mean(weightLb))
unique(demographics$RACE)
as_tibble(iris)
tibble(x = 1:5, y = 1, z = x ^ 2 + y)
read_csv("a,b,c
1,2,3
4,5,6")
read_csv("The first line of metadata
The second line of metadata
x,y,z
1,2,3", skip = 2)
read_csv("# A comment I want to skip
x,y,z
1,2,3", comment = "#")
read_csv("1,2,3\n4,5,6", col_names = FALSE)
read_csv("1,2,3\n4,5,6", col_names = c("x", "y", "z"))
x <- read_csv('demographics.csv',col_types=cols(PAT_ID=col_character(),GENDER=col_factor(),BIRTH_DATE=col_date(),DEATH_DATE=col_date(), RACE=col_factor(),ETHNICITY=col_character()))
x <- read_csv('demographics.csv',col_types=cols(PAT_ID=col_character(),GENDER=col_character(),BIRTH_DATE=col_date(),DEATH_DATE=col_date(), RACE=col_character(),ETHNICITY=col_character()))
